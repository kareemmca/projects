Scala is a general-purpose programming language. 
Scala has full support for functional programming and a very strong static type system. 
Designed to be concise, many of Scala's design decisions were inspired by criticism of Java's shortcomings.
Scala source code is intended to be compiled to Java bytecode, so that the resulting executable code runs on a Java virtual machine. 
Java libraries may be used directly in Scala code and vice versa (language interoperability). 
Like Java, Scala is object-oriented, and uses a curly-brace syntax reminiscent of the C programming language. 
Unlike Java, Scala has many features of functional programming languages like Scheme, Standard ML and Haskell, 
including currying, type inference, immutability, lazy evaluation, and pattern matching. 
It also has an advanced type system supporting algebraic data types, covariance and contravariance, 
higher-order types (but not higher-rank types), and anonymous types. 
Other features of Scala not present in Java include operator overloading, optional parameters, 
named parameters, raw strings, and no checked exceptions.
The name Scala is a portmanteau of scalable and language, signifying that it is designed to grow with the demands of its users.
Scala runs on the Java platform (Java virtual machine) and is compatible with existing Java programs. 
As Android applications are typically written in Java and translated from Java bytecode into 
Dalvik bytecode (which may be further translated to native machine code during installation) when packaged, 
Scala's Java compatibility makes it well suited to Android development, more so when a functional approach is preferred. 
Scala also can compile to JavaScript, making it possible to write Scala programs that can run in web browsers.
The Scala software distribution, including compiler and libraries, is released under a BSD license.
